#!/usr/bin/env ruby

require 'buffer'
require 'logger'

log_level = ENV['BUFFER_DEBUG'] ? Logger::INFO : Logger::ERROR

LOG = Logger.new(STDOUT) { |l| l.log_level = log_level }

def gather_message(argv)
  args = argv.dup
  case args.count
  when 0 then abort("Please supply a message for Buffer Post.")
  when 1 then args.first
  else
    args.join(" ")
  end
end

def main
  token = Env.BUFFER_ACCESS_TOKEN
  profile = Integer(ENV.fetch('BUFFER_PROFILE_ID', "0"))

  message = gather_message(ARGV)
  client = Buffer::Client.new(token)
  profile_id = client.profiles[profile].id
  post_args = {text: message, profile_ids: [profile_id]}
  LOG.info('#main.post_args') { post_args }
  unless ENV['BUFFER_DEBUG']
    client.create_update(body: post_args)
    puts "Posted message."
  end
end

main
